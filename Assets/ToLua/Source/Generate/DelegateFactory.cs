//this source code was auto-generated by tolua#, do not modify it
using System;
using System.Collections.Generic;
using LuaInterface;

public class DelegateFactory
{
	public delegate Delegate DelegateCreate(LuaFunction func, LuaTable self, bool flag);
	public static Dictionary<Type, DelegateCreate> dict = new Dictionary<Type, DelegateCreate>();
	static DelegateFactory factory = new DelegateFactory();

	public static void Init()
	{
		Register();
	}

	public static void Register()
	{

	}
    
    public static Delegate CreateDelegate(Type t, LuaFunction func = null)
    {
        DelegateCreate Create = null;

        if (!dict.TryGetValue(t, out Create))
        {
            throw new LuaException(string.Format("Delegate {0} not register", LuaMisc.GetTypeName(t)));            
        }

        if (func != null)
        {
            LuaState state = func.GetLuaState();
            LuaDelegate target = state.GetLuaDelegate(func);
            
            if (target != null)
            {
                return Delegate.CreateDelegate(t, target, target.method);
            }  
            else
            {
                Delegate d = Create(func, null, false);
                target = d.Target as LuaDelegate;
                state.AddLuaDelegate(target, func);
                return d;
            }       
        }

        return Create(null, null, false);        
    }
    
    public static Delegate CreateDelegate(Type t, LuaFunction func, LuaTable self)
    {
        DelegateCreate Create = null;

        if (!dict.TryGetValue(t, out Create))
        {
            throw new LuaException(string.Format("Delegate {0} not register", LuaMisc.GetTypeName(t)));
        }

        if (func != null)
        {
            LuaState state = func.GetLuaState();
            LuaDelegate target = state.GetLuaDelegate(func, self);

            if (target != null)
            {
                return Delegate.CreateDelegate(t, target, target.method);
            }
            else
            {
                Delegate d = Create(func, self, true);
                target = d.Target as LuaDelegate;
                state.AddLuaDelegate(target, func, self);
                return d;
            }
        }

        return Create(null, null, true);
    }
    
    public static Delegate RemoveDelegate(Delegate obj, LuaFunction func)
    {
        LuaState state = func.GetLuaState();
        Delegate[] ds = obj.GetInvocationList();

        for (int i = 0; i < ds.Length; i++)
        {
            LuaDelegate ld = ds[i].Target as LuaDelegate;

            if (ld != null && ld.func == func)
            {
                obj = Delegate.Remove(obj, ds[i]);
                state.DelayDispose(ld.func);
                break;
            }
        }

        return obj;
    }
    
    public static Delegate RemoveDelegate(Delegate obj, Delegate dg)
    {
        LuaDelegate remove = dg.Target as LuaDelegate;

        if (remove == null)
        {
            obj = Delegate.Remove(obj, dg);
            return obj;
        }

        LuaState state = remove.func.GetLuaState();
        Delegate[] ds = obj.GetInvocationList();        

        for (int i = 0; i < ds.Length; i++)
        {
            LuaDelegate ld = ds[i].Target as LuaDelegate;

            if (ld != null && ld == remove)
            {
                obj = Delegate.Remove(obj, ds[i]);
                state.DelayDispose(ld.func);
                state.DelayDispose(ld.self);
                break;
            }
        }

        return obj;
    }

	class System_Action_Event : LuaDelegate
	{
		public System_Action_Event(LuaFunction func) : base(func) { }
		public System_Action_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action System_Action(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			System_Action_Event target = new System_Action_Event(func);
			System.Action d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_Event target = new System_Action_Event(func, self);
			System.Action d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action), L, pos);
	}

	void Push_System_Action(IntPtr L, System.Action o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction UnityEngine_Events_UnityAction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_Event target = new UnityEngine_Events_UnityAction_Event(func);
			UnityEngine.Events.UnityAction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_Event target = new UnityEngine_Events_UnityAction_Event(func, self);
			UnityEngine.Events.UnityAction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Events.UnityAction), L, pos);
	}

	void Push_UnityEngine_Events_UnityAction(IntPtr L, UnityEngine.Events.UnityAction o)
	{
		ToLua.Push(L, o);
	}

	class System_Predicate_int_Event : LuaDelegate
	{
		public System_Predicate_int_Event(LuaFunction func) : base(func) { }
		public System_Predicate_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Predicate<int> System_Predicate_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Predicate<int> fn = delegate(int param0) { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Predicate_int_Event target = new System_Predicate_int_Event(func);
			System.Predicate<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Predicate_int_Event target = new System_Predicate_int_Event(func, self);
			System.Predicate<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Predicate_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Predicate<int>), L, pos);
	}

	void Push_System_Predicate_int(IntPtr L, System.Predicate<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_int_Event : LuaDelegate
	{
		public System_Action_int_Event(LuaFunction func) : base(func) { }
		public System_Action_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<int> System_Action_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<int> fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_int_Event target = new System_Action_int_Event(func);
			System.Action<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_int_Event target = new System_Action_int_Event(func, self);
			System.Action<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<int>), L, pos);
	}

	void Push_System_Action_int(IntPtr L, System.Action<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Comparison_int_Event : LuaDelegate
	{
		public System_Comparison_int_Event(LuaFunction func) : base(func) { }
		public System_Comparison_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(int param0, int param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(int param0, int param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public System.Comparison<int> System_Comparison_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Comparison<int> fn = delegate(int param0, int param1) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Comparison_int_Event target = new System_Comparison_int_Event(func);
			System.Comparison<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Comparison_int_Event target = new System_Comparison_int_Event(func, self);
			System.Comparison<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Comparison_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Comparison<int>), L, pos);
	}

	void Push_System_Comparison_int(IntPtr L, System.Comparison<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_int_int_Event : LuaDelegate
	{
		public System_Func_int_int_Event(LuaFunction func) : base(func) { }
		public System_Func_int_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<int,int> System_Func_int_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<int,int> fn = delegate(int param0) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Func_int_int_Event target = new System_Func_int_int_Event(func);
			System.Func<int,int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_int_int_Event target = new System_Func_int_int_Event(func, self);
			System.Func<int,int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_int_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<int,int>), L, pos);
	}

	void Push_System_Func_int_int(IntPtr L, System.Func<int,int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_float_bool_UnityEngine_GameObject_Event : LuaDelegate
	{
		public System_Action_float_bool_UnityEngine_GameObject_Event(LuaFunction func) : base(func) { }
		public System_Action_float_bool_UnityEngine_GameObject_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float param0, bool param1, UnityEngine.GameObject param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PushSealed(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float param0, bool param1, UnityEngine.GameObject param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PushSealed(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<float,bool,UnityEngine.GameObject> System_Action_float_bool_UnityEngine_GameObject(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<float,bool,UnityEngine.GameObject> fn = delegate(float param0, bool param1, UnityEngine.GameObject param2) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_float_bool_UnityEngine_GameObject_Event target = new System_Action_float_bool_UnityEngine_GameObject_Event(func);
			System.Action<float,bool,UnityEngine.GameObject> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_float_bool_UnityEngine_GameObject_Event target = new System_Action_float_bool_UnityEngine_GameObject_Event(func, self);
			System.Action<float,bool,UnityEngine.GameObject> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_float_bool_UnityEngine_GameObject(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<float,bool,UnityEngine.GameObject>), L, pos);
	}

	void Push_System_Action_float_bool_UnityEngine_GameObject(IntPtr L, System.Action<float,bool,UnityEngine.GameObject> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_bool_Event : LuaDelegate
	{
		public System_Action_bool_Event(LuaFunction func) : base(func) { }
		public System_Action_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(bool param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(bool param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<bool> System_Action_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<bool> fn = delegate(bool param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_bool_Event target = new System_Action_bool_Event(func);
			System.Action<bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_bool_Event target = new System_Action_bool_Event(func, self);
			System.Action<bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<bool>), L, pos);
	}

	void Push_System_Action_bool(IntPtr L, System.Action<bool> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_AsyncOperation_Event : LuaDelegate
	{
		public System_Action_UnityEngine_AsyncOperation_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_AsyncOperation_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.AsyncOperation param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.AsyncOperation param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.AsyncOperation> System_Action_UnityEngine_AsyncOperation(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.AsyncOperation> fn = delegate(UnityEngine.AsyncOperation param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_AsyncOperation_Event target = new System_Action_UnityEngine_AsyncOperation_Event(func);
			System.Action<UnityEngine.AsyncOperation> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_AsyncOperation_Event target = new System_Action_UnityEngine_AsyncOperation_Event(func, self);
			System.Action<UnityEngine.AsyncOperation> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_AsyncOperation(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.AsyncOperation>), L, pos);
	}

	void Push_System_Action_UnityEngine_AsyncOperation(IntPtr L, System.Action<UnityEngine.AsyncOperation> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_float_bool_UnityEngine_Texture_Event : LuaDelegate
	{
		public System_Action_float_bool_UnityEngine_Texture_Event(LuaFunction func) : base(func) { }
		public System_Action_float_bool_UnityEngine_Texture_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float param0, bool param1, UnityEngine.Texture param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float param0, bool param1, UnityEngine.Texture param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<float,bool,UnityEngine.Texture> System_Action_float_bool_UnityEngine_Texture(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<float,bool,UnityEngine.Texture> fn = delegate(float param0, bool param1, UnityEngine.Texture param2) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_float_bool_UnityEngine_Texture_Event target = new System_Action_float_bool_UnityEngine_Texture_Event(func);
			System.Action<float,bool,UnityEngine.Texture> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_float_bool_UnityEngine_Texture_Event target = new System_Action_float_bool_UnityEngine_Texture_Event(func, self);
			System.Action<float,bool,UnityEngine.Texture> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_float_bool_UnityEngine_Texture(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<float,bool,UnityEngine.Texture>), L, pos);
	}

	void Push_System_Action_float_bool_UnityEngine_Texture(IntPtr L, System.Action<float,bool,UnityEngine.Texture> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_float_bool_UnityEngine_Material_Event : LuaDelegate
	{
		public System_Action_float_bool_UnityEngine_Material_Event(LuaFunction func) : base(func) { }
		public System_Action_float_bool_UnityEngine_Material_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float param0, bool param1, UnityEngine.Material param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float param0, bool param1, UnityEngine.Material param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<float,bool,UnityEngine.Material> System_Action_float_bool_UnityEngine_Material(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<float,bool,UnityEngine.Material> fn = delegate(float param0, bool param1, UnityEngine.Material param2) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_float_bool_UnityEngine_Material_Event target = new System_Action_float_bool_UnityEngine_Material_Event(func);
			System.Action<float,bool,UnityEngine.Material> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_float_bool_UnityEngine_Material_Event target = new System_Action_float_bool_UnityEngine_Material_Event(func, self);
			System.Action<float,bool,UnityEngine.Material> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_float_bool_UnityEngine_Material(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<float,bool,UnityEngine.Material>), L, pos);
	}

	void Push_System_Action_float_bool_UnityEngine_Material(IntPtr L, System.Action<float,bool,UnityEngine.Material> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_float_bool_UnityEngine_AudioClip_Event : LuaDelegate
	{
		public System_Action_float_bool_UnityEngine_AudioClip_Event(LuaFunction func) : base(func) { }
		public System_Action_float_bool_UnityEngine_AudioClip_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float param0, bool param1, UnityEngine.AudioClip param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PushSealed(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float param0, bool param1, UnityEngine.AudioClip param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PushSealed(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<float,bool,UnityEngine.AudioClip> System_Action_float_bool_UnityEngine_AudioClip(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<float,bool,UnityEngine.AudioClip> fn = delegate(float param0, bool param1, UnityEngine.AudioClip param2) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_float_bool_UnityEngine_AudioClip_Event target = new System_Action_float_bool_UnityEngine_AudioClip_Event(func);
			System.Action<float,bool,UnityEngine.AudioClip> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_float_bool_UnityEngine_AudioClip_Event target = new System_Action_float_bool_UnityEngine_AudioClip_Event(func, self);
			System.Action<float,bool,UnityEngine.AudioClip> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_float_bool_UnityEngine_AudioClip(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<float,bool,UnityEngine.AudioClip>), L, pos);
	}

	void Push_System_Action_float_bool_UnityEngine_AudioClip(IntPtr L, System.Action<float,bool,UnityEngine.AudioClip> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_float_bool_UnityEngine_TextAsset_Event : LuaDelegate
	{
		public System_Action_float_bool_UnityEngine_TextAsset_Event(LuaFunction func) : base(func) { }
		public System_Action_float_bool_UnityEngine_TextAsset_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float param0, bool param1, UnityEngine.TextAsset param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float param0, bool param1, UnityEngine.TextAsset param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<float,bool,UnityEngine.TextAsset> System_Action_float_bool_UnityEngine_TextAsset(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<float,bool,UnityEngine.TextAsset> fn = delegate(float param0, bool param1, UnityEngine.TextAsset param2) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_float_bool_UnityEngine_TextAsset_Event target = new System_Action_float_bool_UnityEngine_TextAsset_Event(func);
			System.Action<float,bool,UnityEngine.TextAsset> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_float_bool_UnityEngine_TextAsset_Event target = new System_Action_float_bool_UnityEngine_TextAsset_Event(func, self);
			System.Action<float,bool,UnityEngine.TextAsset> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_float_bool_UnityEngine_TextAsset(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<float,bool,UnityEngine.TextAsset>), L, pos);
	}

	void Push_System_Action_float_bool_UnityEngine_TextAsset(IntPtr L, System.Action<float,bool,UnityEngine.TextAsset> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_float_bool_UnityEngine_AnimationClip_Event : LuaDelegate
	{
		public System_Action_float_bool_UnityEngine_AnimationClip_Event(LuaFunction func) : base(func) { }
		public System_Action_float_bool_UnityEngine_AnimationClip_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float param0, bool param1, UnityEngine.AnimationClip param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PushSealed(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float param0, bool param1, UnityEngine.AnimationClip param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PushSealed(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<float,bool,UnityEngine.AnimationClip> System_Action_float_bool_UnityEngine_AnimationClip(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<float,bool,UnityEngine.AnimationClip> fn = delegate(float param0, bool param1, UnityEngine.AnimationClip param2) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_float_bool_UnityEngine_AnimationClip_Event target = new System_Action_float_bool_UnityEngine_AnimationClip_Event(func);
			System.Action<float,bool,UnityEngine.AnimationClip> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_float_bool_UnityEngine_AnimationClip_Event target = new System_Action_float_bool_UnityEngine_AnimationClip_Event(func, self);
			System.Action<float,bool,UnityEngine.AnimationClip> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_float_bool_UnityEngine_AnimationClip(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<float,bool,UnityEngine.AnimationClip>), L, pos);
	}

	void Push_System_Action_float_bool_UnityEngine_AnimationClip(IntPtr L, System.Action<float,bool,UnityEngine.AnimationClip> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_float_bool_UnityEngine_RuntimeAnimatorController_Event : LuaDelegate
	{
		public System_Action_float_bool_UnityEngine_RuntimeAnimatorController_Event(LuaFunction func) : base(func) { }
		public System_Action_float_bool_UnityEngine_RuntimeAnimatorController_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float param0, bool param1, UnityEngine.RuntimeAnimatorController param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float param0, bool param1, UnityEngine.RuntimeAnimatorController param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<float,bool,UnityEngine.RuntimeAnimatorController> System_Action_float_bool_UnityEngine_RuntimeAnimatorController(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<float,bool,UnityEngine.RuntimeAnimatorController> fn = delegate(float param0, bool param1, UnityEngine.RuntimeAnimatorController param2) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_float_bool_UnityEngine_RuntimeAnimatorController_Event target = new System_Action_float_bool_UnityEngine_RuntimeAnimatorController_Event(func);
			System.Action<float,bool,UnityEngine.RuntimeAnimatorController> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_float_bool_UnityEngine_RuntimeAnimatorController_Event target = new System_Action_float_bool_UnityEngine_RuntimeAnimatorController_Event(func, self);
			System.Action<float,bool,UnityEngine.RuntimeAnimatorController> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_float_bool_UnityEngine_RuntimeAnimatorController(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<float,bool,UnityEngine.RuntimeAnimatorController>), L, pos);
	}

	void Push_System_Action_float_bool_UnityEngine_RuntimeAnimatorController(IntPtr L, System.Action<float,bool,UnityEngine.RuntimeAnimatorController> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_float_bool_UnityEngine_Shader_Event : LuaDelegate
	{
		public System_Action_float_bool_UnityEngine_Shader_Event(LuaFunction func) : base(func) { }
		public System_Action_float_bool_UnityEngine_Shader_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float param0, bool param1, UnityEngine.Shader param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PushSealed(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float param0, bool param1, UnityEngine.Shader param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PushSealed(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<float,bool,UnityEngine.Shader> System_Action_float_bool_UnityEngine_Shader(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<float,bool,UnityEngine.Shader> fn = delegate(float param0, bool param1, UnityEngine.Shader param2) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_float_bool_UnityEngine_Shader_Event target = new System_Action_float_bool_UnityEngine_Shader_Event(func);
			System.Action<float,bool,UnityEngine.Shader> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_float_bool_UnityEngine_Shader_Event target = new System_Action_float_bool_UnityEngine_Shader_Event(func, self);
			System.Action<float,bool,UnityEngine.Shader> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_float_bool_UnityEngine_Shader(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<float,bool,UnityEngine.Shader>), L, pos);
	}

	void Push_System_Action_float_bool_UnityEngine_Shader(IntPtr L, System.Action<float,bool,UnityEngine.Shader> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_float_bool_UnityEngine_Font_Event : LuaDelegate
	{
		public System_Action_float_bool_UnityEngine_Font_Event(LuaFunction func) : base(func) { }
		public System_Action_float_bool_UnityEngine_Font_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float param0, bool param1, UnityEngine.Font param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PushSealed(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float param0, bool param1, UnityEngine.Font param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PushSealed(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<float,bool,UnityEngine.Font> System_Action_float_bool_UnityEngine_Font(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<float,bool,UnityEngine.Font> fn = delegate(float param0, bool param1, UnityEngine.Font param2) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_float_bool_UnityEngine_Font_Event target = new System_Action_float_bool_UnityEngine_Font_Event(func);
			System.Action<float,bool,UnityEngine.Font> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_float_bool_UnityEngine_Font_Event target = new System_Action_float_bool_UnityEngine_Font_Event(func, self);
			System.Action<float,bool,UnityEngine.Font> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_float_bool_UnityEngine_Font(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<float,bool,UnityEngine.Font>), L, pos);
	}

	void Push_System_Action_float_bool_UnityEngine_Font(IntPtr L, System.Action<float,bool,UnityEngine.Font> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_float_bool_UnityEngine_Objects_Event : LuaDelegate
	{
		public System_Action_float_bool_UnityEngine_Objects_Event(LuaFunction func) : base(func) { }
		public System_Action_float_bool_UnityEngine_Objects_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float param0, bool param1, UnityEngine.Object[] param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float param0, bool param1, UnityEngine.Object[] param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<float,bool,UnityEngine.Object[]> System_Action_float_bool_UnityEngine_Objects(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<float,bool,UnityEngine.Object[]> fn = delegate(float param0, bool param1, UnityEngine.Object[] param2) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_float_bool_UnityEngine_Objects_Event target = new System_Action_float_bool_UnityEngine_Objects_Event(func);
			System.Action<float,bool,UnityEngine.Object[]> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_float_bool_UnityEngine_Objects_Event target = new System_Action_float_bool_UnityEngine_Objects_Event(func, self);
			System.Action<float,bool,UnityEngine.Object[]> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_float_bool_UnityEngine_Objects(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<float,bool,UnityEngine.Object[]>), L, pos);
	}

	void Push_System_Action_float_bool_UnityEngine_Objects(IntPtr L, System.Action<float,bool,UnityEngine.Object[]> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_float_bool_UnityEngine_ScriptableObject_Event : LuaDelegate
	{
		public System_Action_float_bool_UnityEngine_ScriptableObject_Event(LuaFunction func) : base(func) { }
		public System_Action_float_bool_UnityEngine_ScriptableObject_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float param0, bool param1, UnityEngine.ScriptableObject param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float param0, bool param1, UnityEngine.ScriptableObject param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<float,bool,UnityEngine.ScriptableObject> System_Action_float_bool_UnityEngine_ScriptableObject(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<float,bool,UnityEngine.ScriptableObject> fn = delegate(float param0, bool param1, UnityEngine.ScriptableObject param2) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_float_bool_UnityEngine_ScriptableObject_Event target = new System_Action_float_bool_UnityEngine_ScriptableObject_Event(func);
			System.Action<float,bool,UnityEngine.ScriptableObject> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_float_bool_UnityEngine_ScriptableObject_Event target = new System_Action_float_bool_UnityEngine_ScriptableObject_Event(func, self);
			System.Action<float,bool,UnityEngine.ScriptableObject> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_float_bool_UnityEngine_ScriptableObject(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<float,bool,UnityEngine.ScriptableObject>), L, pos);
	}

	void Push_System_Action_float_bool_UnityEngine_ScriptableObject(IntPtr L, System.Action<float,bool,UnityEngine.ScriptableObject> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_float_bool_UnityEngine_ShaderVariantCollection_Event : LuaDelegate
	{
		public System_Action_float_bool_UnityEngine_ShaderVariantCollection_Event(LuaFunction func) : base(func) { }
		public System_Action_float_bool_UnityEngine_ShaderVariantCollection_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float param0, bool param1, UnityEngine.ShaderVariantCollection param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PushSealed(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float param0, bool param1, UnityEngine.ShaderVariantCollection param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PushSealed(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<float,bool,UnityEngine.ShaderVariantCollection> System_Action_float_bool_UnityEngine_ShaderVariantCollection(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<float,bool,UnityEngine.ShaderVariantCollection> fn = delegate(float param0, bool param1, UnityEngine.ShaderVariantCollection param2) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_float_bool_UnityEngine_ShaderVariantCollection_Event target = new System_Action_float_bool_UnityEngine_ShaderVariantCollection_Event(func);
			System.Action<float,bool,UnityEngine.ShaderVariantCollection> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_float_bool_UnityEngine_ShaderVariantCollection_Event target = new System_Action_float_bool_UnityEngine_ShaderVariantCollection_Event(func, self);
			System.Action<float,bool,UnityEngine.ShaderVariantCollection> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_float_bool_UnityEngine_ShaderVariantCollection(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<float,bool,UnityEngine.ShaderVariantCollection>), L, pos);
	}

	void Push_System_Action_float_bool_UnityEngine_ShaderVariantCollection(IntPtr L, System.Action<float,bool,UnityEngine.ShaderVariantCollection> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Camera_CameraCallback_Event : LuaDelegate
	{
		public UnityEngine_Camera_CameraCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Camera_CameraCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Camera param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Camera param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Camera.CameraCallback UnityEngine_Camera_CameraCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Camera.CameraCallback fn = delegate(UnityEngine.Camera param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Camera_CameraCallback_Event target = new UnityEngine_Camera_CameraCallback_Event(func);
			UnityEngine.Camera.CameraCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Camera_CameraCallback_Event target = new UnityEngine_Camera_CameraCallback_Event(func, self);
			UnityEngine.Camera.CameraCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Camera_CameraCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Camera.CameraCallback), L, pos);
	}

	void Push_UnityEngine_Camera_CameraCallback(IntPtr L, UnityEngine.Camera.CameraCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_AdvertisingIdentifierCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_AdvertisingIdentifierCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_AdvertisingIdentifierCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, bool param1, string param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, bool param1, string param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.AdvertisingIdentifierCallback UnityEngine_Application_AdvertisingIdentifierCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.AdvertisingIdentifierCallback fn = delegate(string param0, bool param1, string param2) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_AdvertisingIdentifierCallback_Event target = new UnityEngine_Application_AdvertisingIdentifierCallback_Event(func);
			UnityEngine.Application.AdvertisingIdentifierCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_AdvertisingIdentifierCallback_Event target = new UnityEngine_Application_AdvertisingIdentifierCallback_Event(func, self);
			UnityEngine.Application.AdvertisingIdentifierCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_AdvertisingIdentifierCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Application.AdvertisingIdentifierCallback), L, pos);
	}

	void Push_UnityEngine_Application_AdvertisingIdentifierCallback(IntPtr L, UnityEngine.Application.AdvertisingIdentifierCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_LowMemoryCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_LowMemoryCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_LowMemoryCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}



	class UnityEngine_Application_LogCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_LogCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_LogCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, string param1, UnityEngine.LogType param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, string param1, UnityEngine.LogType param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.LogCallback UnityEngine_Application_LogCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.LogCallback fn = delegate(string param0, string param1, UnityEngine.LogType param2) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_LogCallback_Event target = new UnityEngine_Application_LogCallback_Event(func);
			UnityEngine.Application.LogCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_LogCallback_Event target = new UnityEngine_Application_LogCallback_Event(func, self);
			UnityEngine.Application.LogCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_LogCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Application.LogCallback), L, pos);
	}

	void Push_UnityEngine_Application_LogCallback(IntPtr L, UnityEngine.Application.LogCallback o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_bool_Event : LuaDelegate
	{
		public System_Func_bool_Event(LuaFunction func) : base(func) { }
		public System_Func_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call()
		{
			func.BeginPCall();
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<bool> System_Func_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<bool> fn = delegate() { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Func_bool_Event target = new System_Func_bool_Event(func);
			System.Func<bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_bool_Event target = new System_Func_bool_Event(func, self);
			System.Func<bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<bool>), L, pos);
	}

	void Push_System_Func_bool(IntPtr L, System.Func<bool> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_AudioClip_PCMReaderCallback_Event : LuaDelegate
	{
		public UnityEngine_AudioClip_PCMReaderCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_AudioClip_PCMReaderCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float[] param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float[] param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.AudioClip.PCMReaderCallback UnityEngine_AudioClip_PCMReaderCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.AudioClip.PCMReaderCallback fn = delegate(float[] param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_AudioClip_PCMReaderCallback_Event target = new UnityEngine_AudioClip_PCMReaderCallback_Event(func);
			UnityEngine.AudioClip.PCMReaderCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_AudioClip_PCMReaderCallback_Event target = new UnityEngine_AudioClip_PCMReaderCallback_Event(func, self);
			UnityEngine.AudioClip.PCMReaderCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_AudioClip_PCMReaderCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.AudioClip.PCMReaderCallback), L, pos);
	}

	void Push_UnityEngine_AudioClip_PCMReaderCallback(IntPtr L, UnityEngine.AudioClip.PCMReaderCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_AudioClip_PCMSetPositionCallback_Event : LuaDelegate
	{
		public UnityEngine_AudioClip_PCMSetPositionCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_AudioClip_PCMSetPositionCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.AudioClip.PCMSetPositionCallback UnityEngine_AudioClip_PCMSetPositionCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.AudioClip.PCMSetPositionCallback fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_AudioClip_PCMSetPositionCallback_Event target = new UnityEngine_AudioClip_PCMSetPositionCallback_Event(func);
			UnityEngine.AudioClip.PCMSetPositionCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_AudioClip_PCMSetPositionCallback_Event target = new UnityEngine_AudioClip_PCMSetPositionCallback_Event(func, self);
			UnityEngine.AudioClip.PCMSetPositionCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_AudioClip_PCMSetPositionCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.AudioClip.PCMSetPositionCallback), L, pos);
	}

	void Push_UnityEngine_AudioClip_PCMSetPositionCallback(IntPtr L, UnityEngine.AudioClip.PCMSetPositionCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_RectTransform_ReapplyDrivenProperties_Event : LuaDelegate
	{
		public UnityEngine_RectTransform_ReapplyDrivenProperties_Event(LuaFunction func) : base(func) { }
		public UnityEngine_RectTransform_ReapplyDrivenProperties_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.RectTransform param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.RectTransform param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.RectTransform.ReapplyDrivenProperties UnityEngine_RectTransform_ReapplyDrivenProperties(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.RectTransform.ReapplyDrivenProperties fn = delegate(UnityEngine.RectTransform param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_RectTransform_ReapplyDrivenProperties_Event target = new UnityEngine_RectTransform_ReapplyDrivenProperties_Event(func);
			UnityEngine.RectTransform.ReapplyDrivenProperties d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_RectTransform_ReapplyDrivenProperties_Event target = new UnityEngine_RectTransform_ReapplyDrivenProperties_Event(func, self);
			UnityEngine.RectTransform.ReapplyDrivenProperties d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_RectTransform_ReapplyDrivenProperties(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.RectTransform.ReapplyDrivenProperties), L, pos);
	}

	void Push_UnityEngine_RectTransform_ReapplyDrivenProperties(IntPtr L, UnityEngine.RectTransform.ReapplyDrivenProperties o)
	{
		ToLua.Push(L, o);
	}

}

